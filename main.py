from Structure import *
from Node import *
import sympy as sym
import numpy

L = sym.Symbol("L")
E = sym.Symbol("E")
I = sym.Symbol("I")
A = sym.Symbol("A")
I1 = sym.Symbol("i")
A2 = sym.Symbol("a")
F1 = sym.Symbol("F1")
F2 = sym.Symbol("F2")
F3 = sym.Symbol("F3")
M = sym.Symbol("M")
q = sym.Symbol("q")
H = sym.Symbol("H")
s = Structure()
n1 = Node(0, 0)
n2 = Node(2, 0)
n3 = Node(3, 0)
n4 = Node(5, 0)
n5 = Node(6, 0)
s.nodes = [n1, n2, n3, n4, n5]
s.link(1, 2)
s.link(2, 3, link_way2=True)
s.link(3, 4, link_way1=True)
Load = [[False, 2, [0, q * L, L / 2]], [False, 1, [2, q]]]
s.get_L()
s.get_ke()
s.set_load(Load)
s.size_of_K = s.get_freedom()
s.get_K()
s.get_load()
s.add_restrain(False, 1, [-1, -1, -1, -1, -1, 0])
s.add_restrain(False, 2, [-1, -1, 0, -1, -1, 0])
s.add_restrain(False, 3, [-1, -1, 0, -1, -1, -1])
s.change_freedom([])
# sym.cancel(s.K)
print("整体刚度矩阵为:\n", s.K)
print("荷载列阵为:", s.load)
s.result = numpy.linalg.solve(s.K, s.load)
print("结果为：", s.result)
s.get_internal_force()
for i in range(5):
    print("{}号单元杆端内力为：".format(i + 1), s.elements[i].force)
